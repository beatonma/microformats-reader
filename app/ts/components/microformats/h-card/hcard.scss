@use "styles";
@use "styles/animation";

$avatar-size-small: 128px;
$inset-avatar-size-small: 24px;

$avatar-size-large: 150px;
$inset-avatar-size-large: 32px;

/**
 * Avatar animation
 */
@mixin avatarCollapsed {
    width: $avatar-size-small;
    height: $avatar-size-small;
    left: 0;
    transform: translateX(0);
    margin-right: var(--space-2x);
}
@mixin avatarMidpoint {
    width: $avatar-size-large;
    height: $avatar-size-large;
    left: 0;
    transform: translateX(0);
}
@mixin avatarExpanded {
    width: $avatar-size-large;
    height: $avatar-size-large;
    left: 50%;
    transform: translateX(-50%);
    padding: var(--space-3x);
}
@mixin avatarSize($primary, $secondary) {
    > img:first-child {
        @include styles.size($primary);
    }

    > img:nth-child(2) {
        @include styles.size($secondary);
    }
}

%hcard-text-large {
    font-size: var(--fs-h1);
}

%hcard-text-medium {
    font-size: var(--fs-default);
}

%hcard-text-small {
    font-size: var(--fs-100);
}

.hcard-wrapper {
    background-color: var(--surface);
    color: var(--on-surface);
    margin-block: var(--space-1x);
    border-radius: var(--border-radius-medium);
    box-shadow: rgba(9, 30, 66, 0.25) 0 1px 1px,
        rgba(9, 30, 66, 0.13) 0 0 1px 1px;

    :has(> [data-expanded="true"]) {
        margin-block: var(--space-2x);
    }
}

.h-card {
    padding: var(--space-1x);

    &[data-expanded="true"] {
        .avatar {
            animation-name: avatarGrow;
            animation-duration: animation.$duration-long;
            animation-fill-mode: both;
            @include avatarSize($avatar-size-large, $inset-avatar-size-large);
        }

        .hcard-summary {
            @include animation.collapseHorizontal;
        }

        .detail-wrapper {
            @include animation.expandVertical;
        }
    }

    &[data-expanded="false"][data-is-interacted-with="false"] {
        .avatar {
            @include avatarCollapsed;
            @include avatarSize($avatar-size-small, $inset-avatar-size-small);
            @include styles.size($avatar-size-small);
        }

        .detail-wrapper {
            display: none;
        }
    }

    &[data-expanded="false"][data-is-interacted-with="true"] {
        .avatar {
            animation-name: avatarShrink;
            animation-duration: animation.$duration-long;
            animation-fill-mode: both;
            @include avatarSize($avatar-size-small, $inset-avatar-size-small);
        }

        .hcard-summary {
            @include animation.expandHorizontal;
        }

        .detail-wrapper {
            @include animation.collapseVertical;
        }
    }

    .p-name {
        @extend %hcard-text-large;
    }

    .banner {
        // Avatar + summary
        position: relative;
        align-items: start;
    }

    .hcard-detail {
        margin: var(--space-2x);
    }

    .dropdown-header {
        font-size: var(--fs-200);
        line-height: 1.5;
        margin-block: var(--space-1x);
        transition: margin animation.$duration-short;

        &[data-expanded="false"] {
            margin-block: 0;
        }
    }
}

button#hcard_toggle_detail {
    @extend %hover;
    display: block;
    font-size: var(--fs-500);
    width: stretch;
    cursor: pointer;

    .dropdown-icon {
        margin: 0;
        cursor: pointer;
        &:hover {
            background: none;
        }
    }
}

@keyframes avatarGrow {
    0% {
        @include avatarCollapsed;
    }

    33% {
        @include avatarMidpoint;
    }

    100% {
        @include avatarExpanded;
    }
}
@keyframes avatarShrink {
    0% {
        @include avatarExpanded;
    }

    66% {
        @include avatarMidpoint;
    }

    100% {
        @include avatarCollapsed;
    }
}
